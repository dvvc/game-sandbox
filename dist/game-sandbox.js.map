{
  "version": 3,
  "sources": ["../lib/index.js"],
  "sourcesContent": ["// Library code\nconst OPT_DEFAULTS = {\n  width: 600,\n  height: 600,\n  canvasId: 'canvas',\n};\n\n// KeyboardEvent#code -> input key\nconst KEY_MAP = {\n  ArrowRight: 'right',\n  ArrowUp: 'up',\n  ArrowDown: 'down',\n  ArrowLeft: 'left',\n  KeyX: 'b1',\n  KeyZ: 'b2',\n};\n\n// Globals (TODO: Remove)\nlet currentInput = {};\nlet currentInputP = {};\n\n/**\n * Initialize the environment\n *  - Set the canvas size\n *  - Store the canvas context\n *  - Register keyboard handlers\n *\n */\nasync function initEnv(opts) {\n  let { width, height, canvasId } = opts;\n\n  let canvasEl = document.getElementById(canvasId);\n  canvasEl.width = width;\n  canvasEl.height = height;\n\n  initInput(currentInput, currentInputP);\n\n  return {\n    ctx: canvasEl.getContext('2d'),\n    input: {},\n    width,\n    height,\n    initialized: false,\n  };\n}\n\n/**\n * Declares the game loop and starts it\n *\n */\nfunction initGame(state, env) {\n  let updatedState = state;\n  let lastTime = 0;\n\n  (function gameLoop(time) {\n    env.delta = (time - lastTime) / 1000;\n    readInput(env, currentInput, currentInputP);\n    env.ctx.clearRect(0, 0, env.width, env.height);\n    updatedState = env.draw(updatedState, env);\n    clearInputPress(currentInputP);\n    lastTime = time;\n    window.requestAnimationFrame(gameLoop);\n  })(0);\n}\n\nfunction initInput(input, inputP) {\n  document.addEventListener('keydown', e => {\n    let key = KEY_MAP[e.code];\n    let keyp = key + 'p';\n\n    if (!key) return;\n\n    input[key] = true;\n    inputP[keyp] = true;\n  });\n\n  document.addEventListener('keyup', e => {\n    let key = KEY_MAP[e.code];\n    if (!key) return;\n    input[key] = false;\n  });\n}\n\n/**\n * Copy the transient input (as read from the DOM) into the env input\n *\n */\nfunction readInput(env, currentInput, currentInputP) {\n  env.input = Object.assign({}, currentInput, currentInputP);\n}\n\nfunction clearInputPress(currentInputP) {\n  Object.keys(currentInputP).forEach(k => {\n    currentInputP[k] = false;\n  });\n}\n\nfunction setupFileClient(moduleUrl, env) {\n  let ws = new WebSocket(`ws://${location.host}?module=${moduleUrl}`);\n\n  ws.addEventListener('message', async event => {\n    console.log('Message from server ', event.data);\n    let [action, file] = event.data.split(':');\n\n    // We *always* update the gameModule, even if the change is in a submodule\n    if (action === 'change' || action === 'rebuild') {\n      console.log('Updating module');\n\n      // The try block is just to silence esbuild when bundling the distributable\n      let module;\n      try {\n        module = await import(file + '?t=' + new Date().getTime());\n      } catch (e) {\n        throw e;\n      }\n\n      if (!module.setup || !module.draw) {\n        throw new Error(`Invalid module at ${file}`);\n      }\n\n      env.setup = module.setup;\n      env.draw = module.draw;\n\n      // If the client was not initialized, we start the game, otherwise, just reload\n      if (!env.initialized) {\n        let state = env.setup(env);\n\n        env.initialized = true;\n        // game loop\n        initGame(state, env);\n      }\n    }\n  });\n}\n\nexport async function runGame(opts) {\n  opts = Object.assign({}, OPT_DEFAULTS, opts);\n\n  if (!opts.moduleUrl) {\n    throw new Error(`Must provide a moduleUrl`);\n  }\n\n  let env = await initEnv(opts);\n\n  setupFileClient(opts.moduleUrl, env);\n}\n"],
  "mappings": ";AACA,IAAM,eAAe;AAAA,EACnB,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,UAAU;AAAA;AAIZ,IAAM,UAAU;AAAA,EACd,YAAY;AAAA,EACZ,SAAS;AAAA,EACT,WAAW;AAAA,EACX,WAAW;AAAA,EACX,MAAM;AAAA,EACN,MAAM;AAAA;AAIR,IAAI,eAAe;AACnB,IAAI,gBAAgB;AASpB,uBAAuB;AACrB,MAAI,CAAE,OAAO,QAAQ,YAAa;AAElC,MAAI,WAAW,SAAS,eAAe;AACvC,WAAS,QAAQ;AACjB,WAAS,SAAS;AAElB,YAAU,cAAc;AAExB,SAAO;AAAA,IACL,KAAK,SAAS,WAAW;AAAA,IACzB,OAAO;AAAA,IACP;AAAA,IACA;AAAA,IACA,aAAa;AAAA;AAAA;AAQjB,kBAAkB,OAAO;AACvB,MAAI,eAAe;AACnB,MAAI,WAAW;AAEf,EAAC,mBAAkB;AACjB,QAAI,QAAS,QAAO,YAAY;AAChC,cAAU,KAAK,cAAc;AAC7B,QAAI,IAAI,UAAU,GAAG,GAAG,IAAI,OAAO,IAAI;AACvC,mBAAe,IAAI,KAAK,cAAc;AACtC,oBAAgB;AAChB,eAAW;AACX,WAAO,sBAAsB;AAAA,KAC5B;AAAA;AAGL,mBAAmB,OAAO;AACxB,WAAS,iBAAiB,WAAW;AACnC,QAAI,MAAM,QAAQ,EAAE;AACpB,QAAI,OAAO,MAAM;AAEjB,QAAI,CAAC;AAAK;AAEV,UAAM,OAAO;AACb,WAAO,QAAQ;AAAA;AAGjB,WAAS,iBAAiB,SAAS;AACjC,QAAI,MAAM,QAAQ,EAAE;AACpB,QAAI,CAAC;AAAK;AACV,UAAM,OAAO;AAAA;AAAA;AAQjB,mBAAmB,KAAK,eAAc;AACpC,MAAI,QAAQ,OAAO,OAAO,IAAI,eAAc;AAAA;AAG9C,yBAAyB;AACvB,SAAO,KAAK,gBAAe,QAAQ;AACjC,mBAAc,KAAK;AAAA;AAAA;AAIvB,yBAAyB,WAAW;AAClC,MAAI,KAAK,IAAI,UAAU,QAAQ,SAAS,eAAe;AAEvD,KAAG,iBAAiB,WAAW,OAAM;AACnC,YAAQ,IAAI,wBAAwB,MAAM;AAC1C,QAAI,CAAC,QAAQ,QAAQ,MAAM,KAAK,MAAM;AAGtC,QAAI,WAAW,YAAY,WAAW;AACpC,cAAQ,IAAI;AAGZ,UAAI;AACJ;AACE,iBAAS,MAAa,cAAO,QAAQ,IAAI,OAAO;AAAA,eACzC;AACP,cAAM;AAAA;AAGR,UAAI,CAAC,OAAO,SAAS,CAAC,OAAO;AAC3B,cAAM,IAAI,MAAM,qBAAqB;AAAA;AAGvC,UAAI,QAAQ,OAAO;AACnB,UAAI,OAAO,OAAO;AAGlB,UAAI,CAAC,IAAI;AACP,YAAI,QAAQ,IAAI,MAAM;AAEtB,YAAI,cAAc;AAElB,iBAAS,OAAO;AAAA;AAAA;AAAA;AAAA;AAMxB,uBAA8B;AAC5B,SAAO,OAAO,OAAO,IAAI,cAAc;AAEvC,MAAI,CAAC,KAAK;AACR,UAAM,IAAI,MAAM;AAAA;AAGlB,MAAI,MAAM,MAAM,QAAQ;AAExB,kBAAgB,KAAK,WAAW;AAAA;",
  "names": []
}
